
#日志文件设置
#logging.level.*=DEBUG
#logging.file=/logs/server.log

image.file.upload.dir.n=userImage/native/
image.file.upload.dir.m=userImage/mini/

########################################################
###datasource -- orcale数据库配置
########################################################

spring.datasource.driverClassName =oracle.jdbc.driver.OracleDriver
spring.datasource.url = jdbc:oracle:thin:@10.88.0.187:1521:SGDB
#spring.datasource.url = jdbc:oracle:thin:@localhost:1521:VEADAN
spring.datasource.username = WHPD
spring.datasource.password = WHPD


########################################################
### SERVICE的配置
########################################################
#server.port=8083
server.context-path=/zkpda-T/
endpoints.enabled=true
########################################################
### mybatis的配置
########################################################
# -- 使用驼峰命名法转换字段。
mybatis.configuration.map-underscore-to-camel-case=true

#使全局的映射器启用或禁用缓存。
#mybatis.configuration.lazy-loading-enabled=true

#当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载
mybatis.configuration.aggressive-lazy-loading=true

#是否允许单条sql 返回多个数据集  (取决于驱动的兼容性)
mybatis.configuration.multiple-result-sets-enabled=true

#是否可以使用列的别名 (取决于驱动的兼容性) default:true
mybatis.configuration.use-column-label=true

# 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行
mybatis.configuration.use-generated-keys=true

#指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
mybatis.configuration.auto-mapping-behavior=partial
#log4j.rootLogger=DEBUG,ServerDailyRollingFile,stdout

#log4j.appender.ServerDailyRollingFile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.ServerDailyRollingFile.DatePattern='.'yyyy-MM-dd_HH
#log4j.appender.ServerDailyRollingFile.File=log4j.log
#log4j.appender.ServerDailyRollingFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.ServerDailyRollingFile.layout.ConversionPattern=%d-%m%n
#log4j.appender.ServerDailyRollingFile.Append=true
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d yyyy-MM-dd HH:mm:ss %p [%c] %m%n


#spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false




